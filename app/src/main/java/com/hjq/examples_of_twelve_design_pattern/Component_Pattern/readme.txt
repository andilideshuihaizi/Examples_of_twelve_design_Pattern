一、定义

组合模式  将对象组合成树形结构，以表示“部分-整体”的层次结构，使得用户对单个对象和组合对象的使用具有一致性。

角色：

Component抽象构建角色：定义参加组合对象的共有方法和属性，可以定义一些默认行为或属性。

Leaf叶子构件：叶子对象，其下再也没有其他分支，依旧是遍历的最小单位。

Composite树枝构件：树枝对象，它的作用是组合树枝节点和叶子节点形成一个树形结构。

合成模式的实现根据所实现接口的区别分为两种形式，分别称为安全式和透明式。

安全模式的合成模式要求管理聚集的方法只出现在树枝构件类中，而不出现在树叶构件类中。
透明式的合成模式要求所有的具体构件类，不论树枝构件还是树叶构件，均符合一个固定接口。
二、类型

 结构型

三、适用场景

维护和战士部分-整体的场景，如树形菜单、文件和文件夹管理。
从一个整体中能够独立出部分模块或功能场景。
四、优点

高层模块调用简单：一颗树形结构中所有节点都是Component，局部和整体对调用者来说没有任何区别，高层模块不必关心自己处理的是单个对象还是整个组合结构。
节点自由增加：容易扩展，想要增加节点只要找到它的父节点就行，符合开闭原则，对后续的维护非常有利。
五、缺点

 使得设计更加复杂。客户端需要花更多时间理清类之间的层次关系。