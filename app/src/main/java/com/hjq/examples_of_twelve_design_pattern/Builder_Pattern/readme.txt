一、定义

建造者模式 是将一个复杂的对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。

创建者模式中的四个角色：

Product产品类：由一系列部件组成，要创建的复杂对象。
Builder抽象建造者：给出一个抽象接口，规范产品的组建。
ConcreteBuilder具体创建者：实现Builder接口，组建产品并且返回组建好的产品。
Director导演类：调用具体建造者来创建复杂对象的各个部分，在导演类中不涉及具体产品的信息，只负责保证对象各部分完整创建或按某种顺序创建。
二、类型

 创建型

三、适用场景

产品具有复杂的内部结构。
产品对象通常包含多个成员属性，需要生成的产品对象的属性相互依赖，需要指定其生成顺序。
四、优点

客户端不必知道产品内部的组成细节。
可以更加精细地控制产品的创建过程
建造者独立容易扩展，增加新的具体建造者无须修改原有类库的代码。
五、缺点

产品之间差异性很大的情况： 建造者模式所创建的产品一般具有较多的共同点，其组成部分相似，如果产品之间的差异性很大，则不适合使用建造者模式，因此其使用范围受到一定的限制。
产品内部变化很复杂的情况： 如果产品的内部变化复杂，可能会导致需要定义很多具体建造者类来实现这种变化，导致系统变得很庞大。